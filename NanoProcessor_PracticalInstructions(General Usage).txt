
Nano Processor - Practical Operation Instructions
=================================================

1. GENERAL USAGE OVERVIEW
--------------------------
This nano processor architecture is built around a finite instruction set and supports operations including arithmetic (add/sub), logic, and jump-based control. It uses a program ROM for instruction storage, a register bank for temporary data, and has output capabilities via LEDs and a 7-segment display.

2. RESET BUTTON INSTRUCTIONS
-----------------------------
- **Reset (port: Reset)**: 
  * Connected to pin U18.
  * This signal resets the Program Counter. 
  * Usage: Pulse high for 1 clock cycle (10 ns), then low.

3. CLOCK SIGNAL
----------------
- **Clk_in**:
  * Connected to pin W5.
  * 10ns clock period is required (100 MHz).
  * Used to drive a slow clock internally.

4. LED SIGNAL MAPPING (Register R7 Output)
-------------------------------------------
- LED[0] -> U16
- LED[1] -> E19
- LED[2] -> U19
- LED[3] -> V19

These LEDs display the 4-bit output stored in Register R7 (D_7).

5. SEVEN SEGMENT DISPLAY MAPPING
---------------------------------
- Display[0] -> W7
- Display[1] -> W6
- Display[2] -> U8
- Display[3] -> V8
- Display[4] -> U5
- Display[5] -> V5
- Display[6] -> U7
- Anode[0] -> U2 (Enabled)
- Anode[1] -> U4
- Anode[2] -> V4
- Anode[3] -> W4

Only Anode[0] is activated (`Anode = "1110"`), so the value of Register R7 is displayed on one digit of the display.

6. FUNCTIONAL UNITS & DATA FLOW
-------------------------------
- **Register Bank (R0â€“R7)**: Temporarily stores 4-bit values.
- **ALU (Adder/Subtractor)**: Computes addition or subtraction based on Add_sub control.
- **Instruction Decoder**: Decodes 12-bit instructions from ROM.
- **MUX/DEMUX**: Routes signals based on control bits (Sel).
- **T-bit Adder**: Adds +1 to PC unless jump is taken.
- **Seven Segment**: Displays R7 content.
- **Zero, Overflow outputs**:
  * Zero -> Pin P1 (indicates zero result from ALU)
  * Overflow -> Pin L1 (indicates overflow in arithmetic)

7. INSTRUCTION CYCLE
---------------------
- Fetch: Instruction is read from Program ROM using PC.
- Decode: Instruction Decoder sets control signals.
- Execute: ALU, MUXes, and Register Bank perform operations.
- Update: Result is stored and output is updated.

8. EXTERNAL INTERFACE SUMMARY
------------------------------
| Signal        | Direction | Function                       | Pin  |
|---------------|-----------|--------------------------------|------|
| Clk_in        | Input     | Clock input                    | W5   |
| Reset         | Input     | Program Counter reset          | U18  |
| LED[3:0]      | Output    | Register R7 output             | U16, E19, U19, V19 |
| Zero          | Output    | Zero flag from ALU             | P1   |
| Overflow      | Output    | Overflow flag from ALU         | L1   |
| Display[6:0]  | Output    | 7-segment segments             | W7, W6, U8, V8, U5, V5, U7 |
| Anode[3:0]    | Output    | 7-segment anode control        | U2, U4, V4, W4 |

For correct execution, ensure that clock and reset pins are correctly initialized, and monitor Register R7 using LEDs or the 7-segment display.
